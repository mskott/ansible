---
## TODO:
##  - SELinux policy allowing ffmpeg to map dri_device

# - name: Create directories
#   hosts: jellyfin
#   tasks:
#     - file:
#         path: '{{ item }}'
#         state: directory
#         mode: 0755
#         recurse: true
#       loop:
#         - '{{ jellyfin_cache }}'
#         - '{{ jellyfin_config }}'
#         - '{{ jellyfin_media }}'

- name: Create Jellyfin container
  hosts: jellyfin
  tasks:
    - containers.podman.podman_container:
        name: jellyfin
        image: docker.io/jellyfin/jellyfin:latest
        label: "io.containers.autoupdate=registry"
        state: present
        volumes:
          - '{{ jellyfin_cache }}:/cache:Z'
          - '{{ jellyfin_config }}:/config:Z'
          - '{{ jellyfin_media }}:/media'
        publish:
          - 8096:8096/tcp
        #See: https://www.redhat.com/sysadmin/files-devices-podman
        group_add: keep-groups
        device:
          - /dev/dri
          # - /dev/dri/card1
          # - /dev/dri/renderD128
        userns: keep-id
        user: '{{ ansible_user_uid }}:{{ ansible_user_gid }}'
        generate_systemd:
          path: '{{ ansible_user_dir }}/.config/systemd/user/'
          restart_policy: always
          new: yes

- name: Allow containers access to devices
  hosts: jellyfin
  become: yes
  tasks:
    - ansible.posix.seboolean:
        name: container_use_devices
        state: yes
        persistent: yes

- name: Enable Jellyfin service
  hosts: jellyfin
  tasks:
    - systemd:
        name: container-jellyfin.service
        scope: user
        #Podman likes to update unit file
        daemon_reload: yes
        enabled: yes
        state: started

- name: Enable linger for user
  hosts: jellyfin
  tasks:
    - command: loginctl enable-linger {{ ansible_user_id }}

- name: Configure firewall
  hosts: jellyfin
  become: yes
  tasks:
    - firewalld:
        state: enabled
        permanent: yes
        zone: public
        immediate: yes
        port: 8096/tcp
